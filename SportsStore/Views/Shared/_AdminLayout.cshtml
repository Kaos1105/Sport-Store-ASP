<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link rel="stylesheet" asp-href-include="lib/bootstrap/dist/css/*.min.css" />
    <title>@ViewBag.Title</title>
    <style>
        .input-validation-error {
            border-color: red;
            background-color: #fee;
        }
    </style>
    @*Enable Clien-side validation since Sever-side validation is more time consuming*@
    <script src="/node_modules/jquery/dist/jquery.min.js"></script>
    <script src="/node_modules/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="/node_modules/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js">
    </script>
</head>
<body class="m-1 p-1">
    <div class="bg-info p-2 row">
        <div class="col">
            <h4>@ViewBag.Title</h4>
        </div>
        <div class="col-2">
            <a class="btn btn-sm btn-primary"
               asp-action="Logout" asp-controller="Account">Log Out</a>
        </div>
    </div>
    @*The benefit of dealing with the message in the template like this is that users will see it displayed on
        whatever page is rendered after they have saved a change. At the moment, I return them to the list of products,
        but I could change the workflow to render some other view, and the users will still see the message (as long as
        the next view also uses the same layout).*@
    @if (TempData["message"] != null)
    {
        <div class="alert alert-success">@TempData["message"]</div>
    }
    @RenderBody()
</body>
</html>